spring.datasource.url=jdbc:h2:mem:db;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;MODE=MySQL;INIT=CREATE SCHEMA IF NOT EXISTS "public"
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true //Enable the console. //~/prova
spring.h2.console.path=/h2-console


spring.hornetq.mode=embedded
spring.hornetq.embedded.enabled=true
spring.hornetq.embedded.queues=accounts

logging.level.com.atomikos=WARN

spring.jta.log-dir=c:\log1  

#com.atomikos.icatch.service=com.atomikos.icatch.standalone.UserTransactionServiceFactory
#com.atomikos.icatch.console_file_name = tm.out
#com.atomikos.icatch.log_base_name = tmlog
#com.atomikos.icatch.tm_unique_name = com.atomikos.spring.jdbc.tm
#com.atomikos.icatch.console_log_level = INFO 
#com.atomikos.icatch.default_jta_timeout = 10000000
#com.atomikos.icatch.enable_logging = true
#com.atomikos.icatch.serial_jta_transactions = false
#com.atomikos.icatch.max_timeout = 30000000
#com.atomikos.level = INFO




#com.atomikos.icatch.service=com.atomikos.icatch.standalone.UserTransactionServiceFactory
#com.atomikos.icatch.log_base_name=your_project_name_log_1
#com.atomikos.icatch.output_dir=c:\log1  
#com.atomikos.icatch.log_base_dir=c:\log1  
 
#com.atomikos.icatch.tm_unique_name=tm1.log   
#com.atomikos.icatch.console_file_name=tm11.log         

#log4j.appender.Atomikos = org.apache.log4j.RollingFileAppender
#log4j.appender.Atomikos.File = logatomikos1.out
#log4j.appender.Atomikos.MaxFileSize = 100KB
#log4j.appender.Atomikos.Append = false
#log4j.appender.Atomikos.layout = org.apache.log4j.PatternLayout
#log4j.appender.Atomikos.layout.ConversionPattern=%p %t %c - %m%n
#log4j.logger.com.atomikos=WARN, Atomikos


