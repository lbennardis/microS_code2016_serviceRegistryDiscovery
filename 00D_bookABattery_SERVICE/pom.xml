<?xml version="1.0" encoding="UTF-8"?>
<project
        xmlns="http://maven.apache.org/POM/4.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="
                http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.3.0.RELEASE</version>
    </parent>
    
    <groupId>it.luigibennardis</groupId>
    <artifactId>00D-bookABattery_SERVICE</artifactId>
    <version>1.0.0.BUILD-SNAPSHOT</version>
    <packaging>jar</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <docker.image.prefix>luigibennardis</docker.image.prefix>
        <start-class>it.luigibennardis.microservice.Application</start-class>
        <java.version>1.8</java.version>
        <github.global.server>github</github.global.server>
    </properties>
    
    <distributionManagement>
		<repository>
			<id>internal.repo</id>
			<name>Temporary Staging Repository</name>
			 
			<url>file:///var/lib/openshift/566ae57d0c1e6629760000cd/app-root/data/buildjenkins/qualityassurance</url>
			
			<!-- 
			IN LOCALE {project.basedir}
			<url>file://${project.build.directory}/qualityassurance</url> 
			-->
			
		</repository>
	</distributionManagement>
	
	
    
    <repositories>
    	<repository>
            <id>repo.spring.io-milestones</id>
            <name>repo.spring.io-milestones</name>
            <url>http://repo.spring.io/libs-milestone-local</url>
        </repository>
        <repository>
            <id>repo.spring.io-snapshots</id>
            <name>repo.spring.io-snapshots</name>
            <url>http://repo.spring.io/libs-snapshot-local</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
                
    </repositories>
  
    
<!-- EUREKA -->
    <pluginRepositories>
        <pluginRepository>
            <id>spring-libs-milestones</id>
            <url>http://repo.spring.io/libs-milestone-local</url>
        </pluginRepository>
        <pluginRepository>
            <id>spring-libs-release</id>
            <url>http://repo.spring.io/libs-release-local</url>
        </pluginRepository>
    </pluginRepositories>
<!--  EUREKA -->  
  
  
  
  
  
<dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-stream-dependencies</artifactId>
            <version>1.0.2.RELEASE</version>
            <type>pom</type>
            <scope>import</scope>
        </dependency>
    </dependencies>
</dependencyManagement>







<dependencies>
    <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-stream</artifactId>
    </dependency>
     
    <dependency>
        <groupId>mysql</groupId>
        <artifactId>mysql-connector-java</artifactId>
    </dependency>
         
    <!--  FLYWAY DATABASE INIZIALIZATION -->
    <dependency>
        <groupId>org.flywaydb</groupId>
        <artifactId>flyway-core</artifactId>
        <version>3.2.1</version>
    </dependency>  
         
        <!--<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
			<version>1.3.3.RELEASE</version>  
		</dependency>-->
        
        	
     <dependency>
         <groupId>org.springframework.boot</groupId>
         <artifactId>spring-boot-starter-test</artifactId>
     </dependency>
     <dependency>
         <groupId>org.springframework.boot</groupId>
         <artifactId>spring-boot-starter-web</artifactId>
     </dependency>
       
	<dependency>
           <groupId>org.springframework.boot</groupId>
           <artifactId>spring-boot-starter-data-rest</artifactId>
       </dependency>
       
       <dependency>
           <groupId>org.springframework.boot</groupId>
           <artifactId>spring-boot-starter-actuator</artifactId>
       </dependency>
       

       <dependency>
           <groupId>com.h2database</groupId>
           <artifactId>h2</artifactId>
           <!-- <scope>test</scope> -->
       </dependency>
       
       <dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-devtools</artifactId>
		</dependency>
   	
       <dependency>
           <groupId>com.jayway.jsonpath</groupId>
           <artifactId>json-path</artifactId>
           <scope>test</scope>
       </dependency>


		<dependency>
			<groupId>org.neo4j</groupId>
			<artifactId>neo4j-cypher-compiler-2.1</artifactId>
			<version>2.1.5</version>
		</dependency>
              
       	<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jms</artifactId>
		</dependency>
	
 
	
	<dependency>
		<groupId>org.hornetq</groupId>
		<artifactId>hornetq-jms-server</artifactId>
	</dependency>
       
       
        
	<dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-data-jpa</artifactId>
	</dependency>
		  
	<dependency>
	   	<groupId>org.springframework.boot</groupId>
	    <artifactId>spring-boot-starter</artifactId>
	    <exclusions>
	        <exclusion>
	            <groupId>org.springframework.boot</groupId>
	            <artifactId>spring-boot-starter-logging</artifactId>
	        </exclusion>
	    </exclusions>
	</dependency>

	<dependency>
	    <groupId>org.springframework.boot</groupId>
	    <artifactId>spring-boot-starter-log4j</artifactId>
	</dependency>

</dependencies>





<build>
        <finalName>${project.artifactId}</finalName>
<!-- run site-maven-plugin's 'site' target as part of the build's normal 'deploy' phase -->
			<plugins>
			
				<plugin>
					<groupId>com.google.code.maven-replacer-plugin</groupId>
						<artifactId>replacer</artifactId>
						<version>1.5.3</version>
						<executions>
							<execution>
								<phase>process-sources</phase>
								<goals>
									<goal>replace</goal>
								</goals>
							
							 
								<configuration>
								<!-- /var/lib/openshift/566ae57d0c1e6629760000cd/app-root/data/wkspacejenkins/ -->
									<file>src/main/docker/dockerfileTemplate</file>
									<!-- wkspace /var/lib/openshift/566ae57d0c1e6629760000cd/app-root/data/wkspacejenkins 
									build -> /var/lib/openshift/566ae57d0c1e6629760000cd/app-root/data/buildjenkins/mvn-repo
									-->
									<outputFile>${PATH_TO_REPO}/Dockerfile</outputFile>
									<replacements>
											<replacement>
												<token>@jar_name@</token>
												<value>00D_bookABattery_SERVICE</value>
											</replacement>
											
											<replacement>
												<token>@version@</token>
												<value>${project.version}</value>
											</replacement>
		
										</replacements>                        
								</configuration>
							</execution>
	  					</executions>
				</plugin>
						
				
						
				<plugin>
				
					<groupId>com.github.github</groupId>
					<artifactId>site-maven-plugin</artifactId>
					<version>0.12</version>
					
					<configuration> 
						<message>Maven artifacts for ${project.version}</message>  <!-- git commit message -->
						<noJekyll>true</noJekyll>                                  <!-- disable webpage processing -->
						<outputDirectory>${PATH_TO_REPO}</outputDirectory> <!-- matches distribution management repository url above -->
						<!-- 
						
						PATH_TO_REPO /var/lib/openshift/566ae57d0c1e6629760000cd/app-root/data/buildjenkins/mvn-repo
						
						IN LOCALE
						<outputDirectory>
						${project.build.directory}/mvn-repo
						</outputDirectory>  
						-->
						<!-- matches distribution management repository url above -->
						
						<branch>refs/heads/qualityassurance</branch>                       <!-- remote branch name -->
						<includes><include>**/*</include></includes>
						<merge>true</merge>                                        <!-- don't delete old artifacts -->
						<repositoryName>bookabatteryservice</repositoryName>      <!-- github repo name -->
						<repositoryOwner>lbennardis</repositoryOwner>              <!-- github username  -->
					</configuration>
									
					<executions>
						<execution>
							<goals>
							  <goal>site</goal>
							</goals>
							<phase>deploy</phase>
						</execution>
					</executions>
									
				</plugin>
							
			
				
			</plugins>
            
         </build> 
	
	
</project>
